// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model IdentifierSequence {
  id         String   @id @default(uuid())
  dataModel  String   @unique
  lastNumber Int      @default(0)
  updatedAt  DateTime @updatedAt
}

// Universal Address Model with Hierarchical Support
model Address {
  id String @id @default(uuid())

  // Polymorphic ownership
  userId String?
  user   Json? // Minimal cached user proper from auth service

  organizationId String?
  organization   Json? // Minimal cached organization object from tenancy-service

  // Address metadata
  type  AddressType @default(OTHER)
  label String? // e.g., "Home", "Office", "Billing"

  // Street-level details
  address1 String // Building/house number and street
  address2 String? // Apartment, suite, floor, etc.
  landmark String? // Nearby landmark or directions

  // Administrative Hierarchy (flexible for any country)
  // These fields adapt to local naming conventions
  level1 String // County (Kenya), State (US), Province (Canada)
  level2 String? // Sub-County (Kenya), City (US), District
  level3 String? // Ward (Kenya), Borough, Municipality  
  level4 String? // Village/Estate (Kenya), Neighborhood
  level5 String? // Additional granularity if needed

  // Legacy/common fields (for backward compatibility)
  cityVillage   String? // Maps to appropriate level
  stateProvince String? // Maps to appropriate level

  country    String // ISO 3166-1 alpha-2 code (KE, US, etc.)
  postalCode String?

  // Geolocation
  latitude  Float?
  longitude Float?
  plusCode  String? // Google Plus Code for precise location

  // Temporal tracking
  startDate DateTime  @default(now())
  endDate   DateTime?

  // Metadata
  preferred Boolean @default(false)
  formatted String? // Cached formatted address

  // Locale-specific configuration
  localeFormat Json? // Store hierarchy labels: {"level1": "County", "level2": "Sub-County"}

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  voided Boolean @default(false)

  @@index([userId])
  @@index([organizationId])
  @@index([userId, preferred])
  @@index([organizationId, preferred])
  @@index([country])
  @@index([level1, level2, level3]) // For hierarchical queries
}

enum AddressType {
  HOME
  WORK
  BILLING
  SHIPPING
  OFFICE
  BRANCH
  WAREHOUSE
  OTHER
}

// Optional: Address Hierarchy Configuration (for dropdowns/autocomplete)
model AddressHierarchy {
  id       String             @id @default(uuid())
  country  String // ISO country code
  level    Int // 1, 2, 3, 4, 5
  parentId String? // Reference to parent level
  parent   AddressHierarchy?  @relation("Hierarchy", fields: [parentId], references: [id])
  children AddressHierarchy[] @relation("Hierarchy")

  code      String // Unique code (e.g., "KE-30" for Nairobi County)
  name      String // Display name
  nameLocal String? // Local language name

  voided Boolean @default(false)

  @@unique([country, code])
  @@index([country, level])
  @@index([parentId])
}
