// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.7.7
//   protoc               v6.32.0
// source: file-usage.message.proto

/* eslint-disable */
import { QueryBuilder } from "./common.message";
import { FileUsageRule, FileUsageScope } from "./files.model";

export const protobufPackage = "";

/** Scope */
export interface QueryFileUsageScopeRequest {
  queryBuilder: QueryBuilder | undefined;
  search?: string | undefined;
  modelName?: string | undefined;
  purpose?: string | undefined;
  includeVoided?: boolean | undefined;
}

export interface QueryFileUsageScopeResponse {
  data: FileUsageScope[];
  metadata: { [key: string]: string };
}

export interface QueryFileUsageScopeResponse_MetadataEntry {
  key: string;
  value: string;
}

export interface CreateFileUsageScopeRequest {
  queryBuilder: QueryBuilder | undefined;
  modelName: string;
  purpose: string;
  description?: string | undefined;
}

export interface UpdateFileUsageScopeRequest {
  queryBuilder: QueryBuilder | undefined;
  id: string;
  modelName?: string | undefined;
  purpose?: string | undefined;
  description?: string | undefined;
}

export interface GetFileUsageScopeResponse {
  data: FileUsageScope | undefined;
  metadata: { [key: string]: string };
}

export interface GetFileUsageScopeResponse_MetadataEntry {
  key: string;
  value: string;
}

/** Rule */
export interface QueryFileUsageRuleRequest {
  queryBuilder: QueryBuilder | undefined;
  search?: string | undefined;
  scopeId?: string | undefined;
  includeVoided?: boolean | undefined;
}

export interface QueryFileUsageRuleResponse {
  data: FileUsageRule[];
  metadata: { [key: string]: string };
}

export interface QueryFileUsageRuleResponse_MetadataEntry {
  key: string;
  value: string;
}

export interface CreateFileUsageRuleRequest {
  queryBuilder: QueryBuilder | undefined;
  scopeId: string;
  maxFiles: number;
}

export interface UpdateFileUsageRuleRequest {
  queryBuilder: QueryBuilder | undefined;
  id: string;
  scopeId?: string | undefined;
  maxFiles?: number | undefined;
}

export interface GetFileUsageRuleResponse {
  data: FileUsageRule | undefined;
  metadata: { [key: string]: string };
}

export interface GetFileUsageRuleResponse_MetadataEntry {
  key: string;
  value: string;
}

export const _PACKAGE_NAME = "";
