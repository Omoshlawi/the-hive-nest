// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.7.7
//   protoc               v6.32.0
// source: files.model.proto

/* eslint-disable */

export const protobufPackage = "";

/** Minimal cached user info */
export interface User {
  id: string;
  email: string;
  displayUsername: string;
}

/** Minimal cached organization */
export interface Organization {
  id: string;
  name: string;
  logo: string;
  slug: string;
}

export interface FileBlob {
  id: string;
  hash: string;
  size: string;
  filename: string;
  mimeType: string;
  remoteId: string;
  storagePath: string;
  storageUrl?: string | undefined;
  rereferences?:
    | FileMetadata
    | undefined;
  /** JSON as string */
  metadata?: string | undefined;
}

export interface FileMetadata {
  id: string;
  /** Reference to physical file */
  blobId: string;
  blob?:
    | FileBlob
    | undefined;
  /** User-specific information */
  originalName: string;
  /** Context and relationships */
  relatedModelId: string;
  relatedModelName: string;
  purpose: string;
  /** Ownership */
  uploadedById: string;
  organizationId?:
    | string
    | undefined;
  /** User-specific metadata */
  metadata?: string | undefined;
  tags: string[];
  description?:
    | string
    | undefined;
  /** Cached user/org data */
  uploadedBy?: User | undefined;
  organization?:
    | Organization
    | undefined;
  /** Lifecycle */
  createdAt: string;
  updatedAt: string;
  lastAccessedAt?: string | undefined;
  expiresAt?: string | undefined;
  voided: boolean;
}

export interface FileUsageScope {
  id: string;
  modelName: string;
  purpose: string;
  description?: string | undefined;
  voided: boolean;
  createdAt: string;
  rules: FileUsageRule[];
}

export interface FileUsageRule {
  id: string;
  scopeId: string;
  scope?: FileUsageScope | undefined;
  maxFiles: number;
  voided: boolean;
  createdAt: string;
}

export const _PACKAGE_NAME = "";
