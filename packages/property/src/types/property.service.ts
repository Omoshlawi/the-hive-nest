// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.7.7
//   protoc               v6.32.0
// source: property.service.proto

/* eslint-disable */
import { GrpcMethod, GrpcStreamMethod } from "@nestjs/microservices";
import { Observable } from "rxjs";
import {
  CreateAmenityRequest,
  DeleteAmenityRequest,
  GetAmenityRequest,
  GetAmenityResponse,
  QueryAmenityRequest,
  QueryAmenityResponse,
  UpdateAmenityRequest,
} from "./amenity.message";
import {
  CreateAttributeTypeRequest,
  DeleteAttributeTypeRequest,
  GetAttributeTypeRequest,
  GetAttributeTypeResponse,
  QueryAttributeTypeRequest,
  QueryAttributeTypeResponse,
  UpdateAttributeTypeRequest,
} from "./attribute-type.message";
import {
  CreateCategoryRequest,
  DeleteCategoryRequest,
  GetCategoryRequest,
  GetCategoryResponse,
  QueryCategoryRequest,
  QueryCategoryResponse,
  UpdateCategoryRequest,
} from "./category.message";
import {
  CreatePropertyAmenityRequest,
  CreatePropertyAttributeRequest,
  CreatePropertyCategoryRequest,
  CreatePropertyMediaRequest,
  CreatePropertyRequest,
  CreatePropertyStatusHistoryRequest,
  CreateRelationshipRequest,
  DeletePropertyAmenityRequest,
  DeletePropertyAttributeRequest,
  DeletePropertyCategoryRequest,
  DeletePropertyMediaRequest,
  DeletePropertyRequest,
  DeletePropertyStatusHistoryRequest,
  DeleteRelationshipRequest,
  GetPropertyAmenityRequest,
  GetPropertyAmenityResponse,
  GetPropertyAttributeRequest,
  GetPropertyAttributeResponse,
  GetPropertyCategoryRequest,
  GetPropertyCategoryResponse,
  GetPropertyMediaRequest,
  GetPropertyMediaResponse,
  GetPropertyRequest,
  GetPropertyResponse,
  GetPropertyStatusHistoryRequest,
  GetPropertyStatusHistoryResponse,
  GetRelationshipRequest,
  GetRelationshipResponse,
  QueryPropertyAmenityRequest,
  QueryPropertyAmenityResponse,
  QueryPropertyAttributeRequest,
  QueryPropertyAttributeResponse,
  QueryPropertyCategoryRequest,
  QueryPropertyCategoryResponse,
  QueryPropertyMediaRequest,
  QueryPropertyMediaResponse,
  QueryPropertyRequest,
  QueryPropertyResponse,
  QueryPropertyStatusHistoryRequest,
  QueryPropertyStatusHistoryResponse,
  QueryRelationshipRequest,
  QueryRelationshipResponse,
  UpdatePropertyAmenityRequest,
  UpdatePropertyAttributeRequest,
  UpdatePropertyCategoryRequest,
  UpdatePropertyMediaRequest,
  UpdatePropertyRequest,
  UpdateRelationshipRequest,
} from "./property.message";
import {
  CreateRelationshipTypeRequest,
  DeleteRelationshipTypeRequest,
  GetRelationshipTypeRequest,
  GetRelationshipTypeResponse,
  QueryRelationshipTypeRequest,
  QueryRelationshipTypeResponse,
  UpdateRelationshipTypeRequest,
} from "./relationship-type.message";

export const protobufPackage = "hive.property.v1";

export const HIVE_PROPERTY_V1_PACKAGE_NAME = "hive.property.v1";

export interface PropertyClient {
  /** amenities */

  queryAmenities(request: QueryAmenityRequest): Observable<QueryAmenityResponse>;

  getAmenity(request: GetAmenityRequest): Observable<GetAmenityResponse>;

  createAmenity(request: CreateAmenityRequest): Observable<GetAmenityResponse>;

  updateAmenity(request: UpdateAmenityRequest): Observable<GetAmenityResponse>;

  deleteAmenity(request: DeleteAmenityRequest): Observable<GetAmenityResponse>;

  /** categories */

  queryCategories(request: QueryCategoryRequest): Observable<QueryCategoryResponse>;

  getCategory(request: GetCategoryRequest): Observable<GetCategoryResponse>;

  createCategory(request: CreateCategoryRequest): Observable<GetCategoryResponse>;

  updateCategory(request: UpdateCategoryRequest): Observable<GetCategoryResponse>;

  deleteCategory(request: DeleteCategoryRequest): Observable<GetCategoryResponse>;

  /** attribute types */

  queryAttributeTypes(request: QueryAttributeTypeRequest): Observable<QueryAttributeTypeResponse>;

  getAttributeType(request: GetAttributeTypeRequest): Observable<GetAttributeTypeResponse>;

  createAttributeType(request: CreateAttributeTypeRequest): Observable<GetAttributeTypeResponse>;

  updateAttributeType(request: UpdateAttributeTypeRequest): Observable<GetAttributeTypeResponse>;

  deleteAttributeType(request: DeleteAttributeTypeRequest): Observable<GetAttributeTypeResponse>;

  /** Property */

  queryProperties(request: QueryPropertyRequest): Observable<QueryPropertyResponse>;

  getProperty(request: GetPropertyRequest): Observable<GetPropertyResponse>;

  createProperty(request: CreatePropertyRequest): Observable<GetPropertyResponse>;

  updateProperty(request: UpdatePropertyRequest): Observable<GetPropertyResponse>;

  deleteProperty(request: DeletePropertyRequest): Observable<GetPropertyResponse>;

  /** Relationship type */

  queryRelationshipType(request: QueryRelationshipTypeRequest): Observable<QueryRelationshipTypeResponse>;

  getRelationshipType(request: GetRelationshipTypeRequest): Observable<GetRelationshipTypeResponse>;

  createRelationshipType(request: CreateRelationshipTypeRequest): Observable<GetRelationshipTypeResponse>;

  updateRelationshipType(request: UpdateRelationshipTypeRequest): Observable<GetRelationshipTypeResponse>;

  deleteRelationshipType(request: DeleteRelationshipTypeRequest): Observable<GetRelationshipTypeResponse>;

  /** Relationship */

  queryRelationship(request: QueryRelationshipRequest): Observable<QueryRelationshipResponse>;

  getRelationship(request: GetRelationshipRequest): Observable<GetRelationshipResponse>;

  createRelationship(request: CreateRelationshipRequest): Observable<GetRelationshipResponse>;

  updateRelationship(request: UpdateRelationshipRequest): Observable<GetRelationshipResponse>;

  deleteRelationship(request: DeleteRelationshipRequest): Observable<GetRelationshipResponse>;

  /** Property status */

  queryPropertyStatusHistory(
    request: QueryPropertyStatusHistoryRequest,
  ): Observable<QueryPropertyStatusHistoryResponse>;

  getPropertyStatusHistory(request: GetPropertyStatusHistoryRequest): Observable<GetPropertyStatusHistoryResponse>;

  createPropertyStatusHistory(
    request: CreatePropertyStatusHistoryRequest,
  ): Observable<GetPropertyStatusHistoryResponse>;

  deletePropertyStatusHistory(
    request: DeletePropertyStatusHistoryRequest,
  ): Observable<GetPropertyStatusHistoryResponse>;

  /** Property media */

  queryPropertyMedia(request: QueryPropertyMediaRequest): Observable<QueryPropertyMediaResponse>;

  getPropertyMedia(request: GetPropertyMediaRequest): Observable<GetPropertyMediaResponse>;

  createPropertyMedia(request: CreatePropertyMediaRequest): Observable<GetPropertyMediaResponse>;

  updatePropertyMedia(request: UpdatePropertyMediaRequest): Observable<GetPropertyMediaResponse>;

  deletePropertyMedia(request: DeletePropertyMediaRequest): Observable<GetPropertyMediaResponse>;

  /** Property attribute */

  queryPropertyAttribute(request: QueryPropertyAttributeRequest): Observable<QueryPropertyAttributeResponse>;

  getPropertyAttribute(request: GetPropertyAttributeRequest): Observable<GetPropertyAttributeResponse>;

  createPropertyAttribute(request: CreatePropertyAttributeRequest): Observable<GetPropertyAttributeResponse>;

  updatePropertyAttribute(request: UpdatePropertyAttributeRequest): Observable<GetPropertyAttributeResponse>;

  deletePropertyAttribute(request: DeletePropertyAttributeRequest): Observable<GetPropertyAttributeResponse>;

  /** Property amenity */

  queryPropertyAmenity(request: QueryPropertyAmenityRequest): Observable<QueryPropertyAmenityResponse>;

  getPropertyAmenity(request: GetPropertyAmenityRequest): Observable<GetPropertyAmenityResponse>;

  createPropertyAmenity(request: CreatePropertyAmenityRequest): Observable<GetPropertyAmenityResponse>;

  updatePropertyAmenity(request: UpdatePropertyAmenityRequest): Observable<GetPropertyAmenityResponse>;

  deletePropertyAmenity(request: DeletePropertyAmenityRequest): Observable<GetPropertyAmenityResponse>;

  /** Property category */

  queryPropertyCategory(request: QueryPropertyCategoryRequest): Observable<QueryPropertyCategoryResponse>;

  getPropertyCategory(request: GetPropertyCategoryRequest): Observable<GetPropertyCategoryResponse>;

  createPropertyCategory(request: CreatePropertyCategoryRequest): Observable<GetPropertyCategoryResponse>;

  updatePropertyCategory(request: UpdatePropertyCategoryRequest): Observable<GetPropertyCategoryResponse>;

  deletePropertyCategory(request: DeletePropertyCategoryRequest): Observable<GetPropertyCategoryResponse>;
}

export interface PropertyController {
  /** amenities */

  queryAmenities(
    request: QueryAmenityRequest,
  ): Promise<QueryAmenityResponse> | Observable<QueryAmenityResponse> | QueryAmenityResponse;

  getAmenity(
    request: GetAmenityRequest,
  ): Promise<GetAmenityResponse> | Observable<GetAmenityResponse> | GetAmenityResponse;

  createAmenity(
    request: CreateAmenityRequest,
  ): Promise<GetAmenityResponse> | Observable<GetAmenityResponse> | GetAmenityResponse;

  updateAmenity(
    request: UpdateAmenityRequest,
  ): Promise<GetAmenityResponse> | Observable<GetAmenityResponse> | GetAmenityResponse;

  deleteAmenity(
    request: DeleteAmenityRequest,
  ): Promise<GetAmenityResponse> | Observable<GetAmenityResponse> | GetAmenityResponse;

  /** categories */

  queryCategories(
    request: QueryCategoryRequest,
  ): Promise<QueryCategoryResponse> | Observable<QueryCategoryResponse> | QueryCategoryResponse;

  getCategory(
    request: GetCategoryRequest,
  ): Promise<GetCategoryResponse> | Observable<GetCategoryResponse> | GetCategoryResponse;

  createCategory(
    request: CreateCategoryRequest,
  ): Promise<GetCategoryResponse> | Observable<GetCategoryResponse> | GetCategoryResponse;

  updateCategory(
    request: UpdateCategoryRequest,
  ): Promise<GetCategoryResponse> | Observable<GetCategoryResponse> | GetCategoryResponse;

  deleteCategory(
    request: DeleteCategoryRequest,
  ): Promise<GetCategoryResponse> | Observable<GetCategoryResponse> | GetCategoryResponse;

  /** attribute types */

  queryAttributeTypes(
    request: QueryAttributeTypeRequest,
  ): Promise<QueryAttributeTypeResponse> | Observable<QueryAttributeTypeResponse> | QueryAttributeTypeResponse;

  getAttributeType(
    request: GetAttributeTypeRequest,
  ): Promise<GetAttributeTypeResponse> | Observable<GetAttributeTypeResponse> | GetAttributeTypeResponse;

  createAttributeType(
    request: CreateAttributeTypeRequest,
  ): Promise<GetAttributeTypeResponse> | Observable<GetAttributeTypeResponse> | GetAttributeTypeResponse;

  updateAttributeType(
    request: UpdateAttributeTypeRequest,
  ): Promise<GetAttributeTypeResponse> | Observable<GetAttributeTypeResponse> | GetAttributeTypeResponse;

  deleteAttributeType(
    request: DeleteAttributeTypeRequest,
  ): Promise<GetAttributeTypeResponse> | Observable<GetAttributeTypeResponse> | GetAttributeTypeResponse;

  /** Property */

  queryProperties(
    request: QueryPropertyRequest,
  ): Promise<QueryPropertyResponse> | Observable<QueryPropertyResponse> | QueryPropertyResponse;

  getProperty(
    request: GetPropertyRequest,
  ): Promise<GetPropertyResponse> | Observable<GetPropertyResponse> | GetPropertyResponse;

  createProperty(
    request: CreatePropertyRequest,
  ): Promise<GetPropertyResponse> | Observable<GetPropertyResponse> | GetPropertyResponse;

  updateProperty(
    request: UpdatePropertyRequest,
  ): Promise<GetPropertyResponse> | Observable<GetPropertyResponse> | GetPropertyResponse;

  deleteProperty(
    request: DeletePropertyRequest,
  ): Promise<GetPropertyResponse> | Observable<GetPropertyResponse> | GetPropertyResponse;

  /** Relationship type */

  queryRelationshipType(
    request: QueryRelationshipTypeRequest,
  ): Promise<QueryRelationshipTypeResponse> | Observable<QueryRelationshipTypeResponse> | QueryRelationshipTypeResponse;

  getRelationshipType(
    request: GetRelationshipTypeRequest,
  ): Promise<GetRelationshipTypeResponse> | Observable<GetRelationshipTypeResponse> | GetRelationshipTypeResponse;

  createRelationshipType(
    request: CreateRelationshipTypeRequest,
  ): Promise<GetRelationshipTypeResponse> | Observable<GetRelationshipTypeResponse> | GetRelationshipTypeResponse;

  updateRelationshipType(
    request: UpdateRelationshipTypeRequest,
  ): Promise<GetRelationshipTypeResponse> | Observable<GetRelationshipTypeResponse> | GetRelationshipTypeResponse;

  deleteRelationshipType(
    request: DeleteRelationshipTypeRequest,
  ): Promise<GetRelationshipTypeResponse> | Observable<GetRelationshipTypeResponse> | GetRelationshipTypeResponse;

  /** Relationship */

  queryRelationship(
    request: QueryRelationshipRequest,
  ): Promise<QueryRelationshipResponse> | Observable<QueryRelationshipResponse> | QueryRelationshipResponse;

  getRelationship(
    request: GetRelationshipRequest,
  ): Promise<GetRelationshipResponse> | Observable<GetRelationshipResponse> | GetRelationshipResponse;

  createRelationship(
    request: CreateRelationshipRequest,
  ): Promise<GetRelationshipResponse> | Observable<GetRelationshipResponse> | GetRelationshipResponse;

  updateRelationship(
    request: UpdateRelationshipRequest,
  ): Promise<GetRelationshipResponse> | Observable<GetRelationshipResponse> | GetRelationshipResponse;

  deleteRelationship(
    request: DeleteRelationshipRequest,
  ): Promise<GetRelationshipResponse> | Observable<GetRelationshipResponse> | GetRelationshipResponse;

  /** Property status */

  queryPropertyStatusHistory(
    request: QueryPropertyStatusHistoryRequest,
  ):
    | Promise<QueryPropertyStatusHistoryResponse>
    | Observable<QueryPropertyStatusHistoryResponse>
    | QueryPropertyStatusHistoryResponse;

  getPropertyStatusHistory(
    request: GetPropertyStatusHistoryRequest,
  ):
    | Promise<GetPropertyStatusHistoryResponse>
    | Observable<GetPropertyStatusHistoryResponse>
    | GetPropertyStatusHistoryResponse;

  createPropertyStatusHistory(
    request: CreatePropertyStatusHistoryRequest,
  ):
    | Promise<GetPropertyStatusHistoryResponse>
    | Observable<GetPropertyStatusHistoryResponse>
    | GetPropertyStatusHistoryResponse;

  deletePropertyStatusHistory(
    request: DeletePropertyStatusHistoryRequest,
  ):
    | Promise<GetPropertyStatusHistoryResponse>
    | Observable<GetPropertyStatusHistoryResponse>
    | GetPropertyStatusHistoryResponse;

  /** Property media */

  queryPropertyMedia(
    request: QueryPropertyMediaRequest,
  ): Promise<QueryPropertyMediaResponse> | Observable<QueryPropertyMediaResponse> | QueryPropertyMediaResponse;

  getPropertyMedia(
    request: GetPropertyMediaRequest,
  ): Promise<GetPropertyMediaResponse> | Observable<GetPropertyMediaResponse> | GetPropertyMediaResponse;

  createPropertyMedia(
    request: CreatePropertyMediaRequest,
  ): Promise<GetPropertyMediaResponse> | Observable<GetPropertyMediaResponse> | GetPropertyMediaResponse;

  updatePropertyMedia(
    request: UpdatePropertyMediaRequest,
  ): Promise<GetPropertyMediaResponse> | Observable<GetPropertyMediaResponse> | GetPropertyMediaResponse;

  deletePropertyMedia(
    request: DeletePropertyMediaRequest,
  ): Promise<GetPropertyMediaResponse> | Observable<GetPropertyMediaResponse> | GetPropertyMediaResponse;

  /** Property attribute */

  queryPropertyAttribute(
    request: QueryPropertyAttributeRequest,
  ):
    | Promise<QueryPropertyAttributeResponse>
    | Observable<QueryPropertyAttributeResponse>
    | QueryPropertyAttributeResponse;

  getPropertyAttribute(
    request: GetPropertyAttributeRequest,
  ): Promise<GetPropertyAttributeResponse> | Observable<GetPropertyAttributeResponse> | GetPropertyAttributeResponse;

  createPropertyAttribute(
    request: CreatePropertyAttributeRequest,
  ): Promise<GetPropertyAttributeResponse> | Observable<GetPropertyAttributeResponse> | GetPropertyAttributeResponse;

  updatePropertyAttribute(
    request: UpdatePropertyAttributeRequest,
  ): Promise<GetPropertyAttributeResponse> | Observable<GetPropertyAttributeResponse> | GetPropertyAttributeResponse;

  deletePropertyAttribute(
    request: DeletePropertyAttributeRequest,
  ): Promise<GetPropertyAttributeResponse> | Observable<GetPropertyAttributeResponse> | GetPropertyAttributeResponse;

  /** Property amenity */

  queryPropertyAmenity(
    request: QueryPropertyAmenityRequest,
  ): Promise<QueryPropertyAmenityResponse> | Observable<QueryPropertyAmenityResponse> | QueryPropertyAmenityResponse;

  getPropertyAmenity(
    request: GetPropertyAmenityRequest,
  ): Promise<GetPropertyAmenityResponse> | Observable<GetPropertyAmenityResponse> | GetPropertyAmenityResponse;

  createPropertyAmenity(
    request: CreatePropertyAmenityRequest,
  ): Promise<GetPropertyAmenityResponse> | Observable<GetPropertyAmenityResponse> | GetPropertyAmenityResponse;

  updatePropertyAmenity(
    request: UpdatePropertyAmenityRequest,
  ): Promise<GetPropertyAmenityResponse> | Observable<GetPropertyAmenityResponse> | GetPropertyAmenityResponse;

  deletePropertyAmenity(
    request: DeletePropertyAmenityRequest,
  ): Promise<GetPropertyAmenityResponse> | Observable<GetPropertyAmenityResponse> | GetPropertyAmenityResponse;

  /** Property category */

  queryPropertyCategory(
    request: QueryPropertyCategoryRequest,
  ): Promise<QueryPropertyCategoryResponse> | Observable<QueryPropertyCategoryResponse> | QueryPropertyCategoryResponse;

  getPropertyCategory(
    request: GetPropertyCategoryRequest,
  ): Promise<GetPropertyCategoryResponse> | Observable<GetPropertyCategoryResponse> | GetPropertyCategoryResponse;

  createPropertyCategory(
    request: CreatePropertyCategoryRequest,
  ): Promise<GetPropertyCategoryResponse> | Observable<GetPropertyCategoryResponse> | GetPropertyCategoryResponse;

  updatePropertyCategory(
    request: UpdatePropertyCategoryRequest,
  ): Promise<GetPropertyCategoryResponse> | Observable<GetPropertyCategoryResponse> | GetPropertyCategoryResponse;

  deletePropertyCategory(
    request: DeletePropertyCategoryRequest,
  ): Promise<GetPropertyCategoryResponse> | Observable<GetPropertyCategoryResponse> | GetPropertyCategoryResponse;
}

export function PropertyControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = [
      "queryAmenities",
      "getAmenity",
      "createAmenity",
      "updateAmenity",
      "deleteAmenity",
      "queryCategories",
      "getCategory",
      "createCategory",
      "updateCategory",
      "deleteCategory",
      "queryAttributeTypes",
      "getAttributeType",
      "createAttributeType",
      "updateAttributeType",
      "deleteAttributeType",
      "queryProperties",
      "getProperty",
      "createProperty",
      "updateProperty",
      "deleteProperty",
      "queryRelationshipType",
      "getRelationshipType",
      "createRelationshipType",
      "updateRelationshipType",
      "deleteRelationshipType",
      "queryRelationship",
      "getRelationship",
      "createRelationship",
      "updateRelationship",
      "deleteRelationship",
      "queryPropertyStatusHistory",
      "getPropertyStatusHistory",
      "createPropertyStatusHistory",
      "deletePropertyStatusHistory",
      "queryPropertyMedia",
      "getPropertyMedia",
      "createPropertyMedia",
      "updatePropertyMedia",
      "deletePropertyMedia",
      "queryPropertyAttribute",
      "getPropertyAttribute",
      "createPropertyAttribute",
      "updatePropertyAttribute",
      "deletePropertyAttribute",
      "queryPropertyAmenity",
      "getPropertyAmenity",
      "createPropertyAmenity",
      "updatePropertyAmenity",
      "deletePropertyAmenity",
      "queryPropertyCategory",
      "getPropertyCategory",
      "createPropertyCategory",
      "updatePropertyCategory",
      "deletePropertyCategory",
    ];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcMethod("Property", method)(constructor.prototype[method], method, descriptor);
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcStreamMethod("Property", method)(constructor.prototype[method], method, descriptor);
    }
  };
}

export const PROPERTY_SERVICE_NAME = "Property";
